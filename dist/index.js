"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Blockchain_1 = require("./blockchain/Blockchain");
const Transaction_1 = require("./blockchain/Transaction");
// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –±–ª–æ–∫—á–µ–π–Ω
const blockchain = new Blockchain_1.Blockchain();
// –°—Ç–≤–æ—Ä—é—î–º–æ –≥–∞–º–∞–Ω—Ü—ñ
const wallet1 = blockchain.createWallet();
const wallet2 = blockchain.createWallet();
console.log("üéâ –°—Ç–≤–æ—Ä–µ–Ω–æ –≥–∞–º–∞–Ω—Ü—ñ:");
console.log(`–ì–∞–º–∞–Ω–µ—Ü—å 1: ${wallet1.address}`);
console.log(`–ì–∞–º–∞–Ω–µ—Ü—å 2: ${wallet2.address}`);
// –î–æ–¥–∞—î–º–æ –±–∞–ª–∞–Ω—Å –¥–æ –ø–µ—Ä—à–æ–≥–æ –≥–∞–º–∞–Ω—Ü—è
blockchain.addBalance(wallet1.address, 1000);
// –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –±–∞–ª–∞–Ω—Å
console.log(`üí∞ –ë–∞–ª–∞–Ω—Å –≥–∞–º–∞–Ω—Ü—è 1: ${blockchain.getBalance(wallet1.address)}`);
console.log(`üí∞ –ë–∞–ª–∞–Ω—Å –≥–∞–º–∞–Ω—Ü—è 2: ${blockchain.getBalance(wallet2.address)}`);
// –î–æ–¥–∞—î–º–æ –∫—ñ–ª—å–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
console.log("‚ûï –î–æ–¥–∞—î–º–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó...");
blockchain.addTransaction(new Transaction_1.Transaction(wallet1.address, wallet2.address, 100));
blockchain.addTransaction(new Transaction_1.Transaction(wallet1.address, wallet2.address, 50));
blockchain.addTransaction(new Transaction_1.Transaction(wallet1.address, wallet2.address, 150));
blockchain.addTransaction(new Transaction_1.Transaction(wallet1.address, wallet2.address, 200));
blockchain.addTransaction(new Transaction_1.Transaction(wallet1.address, wallet2.address, 100)); // –¶—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ –º–∞–π–Ω—ñ–Ω–≥
// –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –±–∞–ª–∞–Ω—Å–∏ –ø—ñ—Å–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
console.log(`üí∞ –ë–∞–ª–∞–Ω—Å –≥–∞–º–∞–Ω—Ü—è 1 –ø—ñ—Å–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π: ${blockchain.getBalance(wallet1.address)}`);
console.log(`üí∞ –ë–∞–ª–∞–Ω—Å –≥–∞–º–∞–Ω—Ü—è 2 –ø—ñ—Å–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π: ${blockchain.getBalance(wallet2.address)}`);
// –í–∏–≤–æ–¥–∏–º–æ –ª–∞–Ω—Ü—é–≥ –±–ª–æ–∫—ñ–≤
console.log("üîó –õ–∞–Ω—Ü—é–≥ –±–ª–æ–∫—ñ–≤:");
console.log(JSON.stringify(blockchain, null, 4));
// –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ü—ñ–ª—ñ—Å–Ω—ñ—Å—Ç—å –ª–∞–Ω—Ü—é–≥–∞
console.log("üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ª–∞–Ω—Ü—é–≥–∞...");
blockchain.validateChain();
